---
apiVersion: v1
data:
  release: 
kind: Secret
metadata:
  labels:
    modifiedAt: "1730411592"
    name: in-cluster-proxy
    owner: helm
    status: deployed
    version: "1"
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  name: sh.helm.release.v1.in-cluster-proxy.v1
type: helm.sh/release.v1
