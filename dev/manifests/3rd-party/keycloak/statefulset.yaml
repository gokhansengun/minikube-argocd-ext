---
# Source: keycloak/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: "hornet"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-15.1.3
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
  annotations:
    pia-team.com/app: keycloak
    pia-team.com/app-logo: keycloak
    pia-team.com/app-title: Keycloak
    pia-team.com/role: pia.k8s.keycloak/0.9.1
spec:
  replicas: 1
  podManagementPolicy: Parallel
  serviceName: keycloak-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/component: keycloak
  template:
    metadata:
      annotations:
        checksum/configmap-env-vars: e82515998cb85893069df25b13ba35b5b9bf74370d5bfef7133710206291e854
        checksum/secrets: e46dda33f58aa4f156ef065fb65ddb53538c356e9dad97df125bc883a6706771
        pia-team.com/app: keycloak
        pia-team.com/app-logo: keycloak
        pia-team.com/app-title: Keycloak
      labels:
        app.kubernetes.io/name: keycloak
        helm.sh/chart: keycloak-15.1.3
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: keycloak
    spec:
      serviceAccountName: keycloak

      imagePullSecrets:
      - name: reg-creds
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloak
                  app.kubernetes.io/instance: keycloak
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity:
      securityContext:
        fsGroup: 1001
      enableServiceLinks: true
      initContainers:
      containers:
      - name: keycloak
        image: 
          europe-docker.pkg.dev/dnext-io/ghcr-dnext-technology/dnext-technology/3rd-party/bitnami/keycloak:21.1.1-debian-11-r8
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: BITNAMI_DEBUG
          value: "false"
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: admin-password
        - name: KEYCLOAK_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-externaldb
              key: db-password
        - name: KEYCLOAK_HTTP_RELATIVE_PATH
          value: "/"
        - name: KEYCLOAK_EXTRA_ARGS
          value: -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.import=/config
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        envFrom:
        - configMapRef:
            name: keycloak-env-vars
        resources:
          limits:
            cpu: 1000m
            memory: 1500Mi
          requests:
            cpu: 50m
            memory: 500Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: infinispan
          containerPort: 7800
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 5
          httpGet:
            path: /
            port: http
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /realms/master
            port: http
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
      volumes:
      - configMap:
          items:
          - key: realm.json
            path: realm.json
          name: keycloak-realm
        name: config
